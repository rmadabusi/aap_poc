<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project name="pet_color_service" default="jar">


	<basename property="my.project.name" file="${basedir}" />
	<property name="jar.name" value="${my.project.name}.jar" />
	<property name="class.name" value="com.adoptapet.color.runner.ServiceRunner" />

	<property name="src.dir" value="src" />
	<property name="build.dir" value="build/" />
	<property name="lib.dir" value="../libs" />
	<property name="dist.dir" value="dist/" />
	<property name="project.lib.dir" value="lib" />

	<echo>Project Name: ${my.project.name}</echo>

	<path id="compile.classpath">
		<fileset dir="${project.lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${project.lib.dir}" />
	</target>

	<target name="init" depends="clean">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${project.lib.dir}" />

		<copy todir="${project.lib.dir}">
			<fileset dir="${lib.dir}">
				<!-- Elastic Search jars -->
				<include name="elasticsearch-2.3.5.jar" />
				<include name="lucene-core-5.5.0.jar" />
				<include name="lucene-analyzers-common-5.5.0.jar" />

				<!-- Elastic Search Support jars -->
				<include name="commons-collections4-4.1.jar" />
				<include name="compress-lzf-1.0.2.jar" />
				<include name="guava-18.0.jar" />
				<include name="hppc-0.7.1.jar" />
				<include name="joda-time-2.9.4.jar" />
				<include name="jsr166e-1.1.0.jar" />
				<include name="netty-3.10.5.Final.jar" />
				<include name="t-digest-3.0.jar" />

				<!-- Jackson jars -->
				<include name="jackson-annotations-2.6.4.jar" />
				<include name="jackson-core-2.6.6.jar" />
				<include name="jackson-databind-2.6.4.jar" />
				<include name="jackson-dataformat-smile-2.6.6.jar" />
				<include name="jettison-1.3.7.jar" />

				<!-- CsvReader jars -->
				<include name="opencsv-3.8.jar" />

				<!-- Servlet & JSP jars -->
				<include name="javaee-api-7.0.jar" />
				<include name="javax.jms-3.1.2.2.jar" />
				<include name="jboss-logging-3.3.0.Final.jar" />
				<include name="jsp-2.1-jetty-6.1.19.jar" />
				<include name="jsp-2.1.jar" />
				<include name="jsp-api-2.1.jar" />
				<include name="management-api-1.1-rev-1.jar" />
				<include name="netty-3.10.5.Final.jar" />
				<include name="servlet-api-2.5-6.1.19.jar" />
				<include name="jsr166e-1.1.0.jar" />
				<include name="jsr311-api-1.1.1.jar" />
				<include name="hibernate-validator-5.2.2.Final.jar" />

				<!-- Logger Jars -->
				<include name="jcl-over-slf4j-1.7.13.jar" />
				<include name="jul-to-slf4j-1.7.13.jar" />
				<include name="log4j-over-slf4j-1.7.13.jar" />
				<include name="log4j.jar" />
				<include name="logback-classic-1.1.3.jar" />
				<include name="logback-core-1.1.3.jar" />
				<include name="slf4j-api-1.7.13.jar" />

				<!-- Spring Boot Jars-->
				<include name="spring-boot-1.3.1.RELEASE.jar" />
				<include name="spring-boot-actuator-1.3.1.RELEASE.jar" />
				<include name="spring-boot-autoconfigure-1.3.1.RELEASE.jar" />
				<include name="spring-boot-starter-1.3.1.RELEASE.jar" />
				<include name="spring-boot-starter-logging-1.3.1.RELEASE.jar" />
				<include name="spring-boot-starter-validation-1.3.1.RELEASE.jar" />
				<include name="spring-boot-starter-web-1.3.1.RELEASE.jar" />

				<!-- Spring Jars-->
				<include name="spring-aop-4.2.4.RELEASE.jar" />
				<include name="spring-beans-4.2.4.RELEASE.jar" />
				<include name="spring-context-4.2.4.RELEASE.jar" />
				<include name="spring-core-4.2.4.RELEASE.jar" />
				<include name="spring-expression-4.2.4.RELEASE.jar" />
				<include name="spring-web-4.2.4.RELEASE.jar" />
				<include name="spring-webmvc-4.2.4.RELEASE.jar" />

				<!-- Tomcat Jars -->
				<include name="tomcat-embed-core-8.0.30.jar" />
				<include name="tomcat-embed-el-8.0.30.jar" />
				<include name="tomcat-embed-logging-juli-8.0.30.jar" />
				<include name="tomcat-embed-websocket-8.0.30.jar" />
				<include name="validation-api-1.1.0.Final.jar" />
				<!-- Tomcat Jars -->

				<!-- Helper Jars -->
				<include name="aopalliance-1.0.jar" />
				<include name="apache-commons-lang.jar" />
				<include name="classmate-1.1.0.jar" />
				<include name="core-3.1.1.jar" />

				<!-- pet_utilities_common Jars -->
				<include name="pet_utilities_common.jar" />
			</fileset>
		</copy>
	</target>

	<target name="checkos">
		<condition property="isWindows" value="true">
			<os family="windows" />
		</condition>
		<condition property="isLinux" value="true">
			<os family="unix" />
		</condition>
	</target>


	<!-- Compile Java files Targets-->
	<target name="compile" depends="init,if_unix,if_windows" description="compile the source">
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}">
				<include name="*.properties" />
			</fileset>
		</copy>
	</target>

	<target name="if_unix" depends="checkos" if="isLinux">
		<javac target="1.8" source="1.8" destdir="${build.dir}" debug="true" srcdir="${src.dir}" fork="yes" executable="/opt/java8/bin/javac" compiler="javac1.8" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>
		<echo message="Ant java version: ${ant.java.version}" />
		<echo message="java version: ${java.version}" />
		<echo message="Linux OS" />
	</target>

	<target name="if_windows" depends="checkos" if="isWindows">
		<javac target="1.8" source="1.8" destdir="${build.dir}" debug="true" srcdir="${src.dir}" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>

		<echo message="Windows OS" />
		<echo message="Ant java version: ${ant.java.version}" />
		<echo message="java version: ${java.version}" />
	</target>


	<!-- Compile Java files Targets-->

	<!-- Jars builder Target-->
	<target name="jar" depends="compile">
		<echo message="Building Jar" />

		<!-- Get Class-Path for MANIFEST in jar file -->
		<pathconvert property="manifest.classpath" pathsep=" ">
			<path refid="compile.classpath" />
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*.jar" to="lib/*.jar" />
				</chainedmapper>
			</mapper>
		</pathconvert>
		<!-- Get Class-Path for MANIFEST in jar file -->

		<jar basedir="${build.dir}" destfile="${dist.dir}${jar.name}">
			<manifest>
				<attribute name="Class-Path" value="${manifest.classpath}" />
				<attribute name="Main-Class" value="${class.name}" />
			</manifest>
		</jar>

		<copydir src="${project.lib.dir}" dest="${dist.dir}/${project.lib.dir}" />
	</target>
	<!-- Jars builder Target-->



</project>
